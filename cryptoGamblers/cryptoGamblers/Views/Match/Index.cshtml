@model cryptoGamblers.Models.MatchViewModel

@{
    ViewBag.Title = Model.Match.Opponent1 + " Vs. " + Model.Match.Opponent2;

}
<div class="container body-content">
    <h1 class="text-center">@Model.Opponent1.UserName  VS @Model.Opponent2.UserName</h1>
    <div class="three-col">
        <div class="opponent op1">
            <h2 class="bet">Opponent 1</h2>
            <div class="avatar-container">
                @if (Model.Opponent1.Avatar != null)
                {
                    <img src="~/Content/uploads/@Model.Opponent1.Avatar" class="avatar-big" />
                }
                else
                {
                    <div class="no-image"></div>
                }
                <p class="username jumbo-title">@Model.Opponent1.UserName</p>
            </div>
            <p class="bet">In-Wallet: <span class="bitcoin-currency">@Model.Opponent1.Balance</span></p>
            <input type="hidden" id="matchId" value="@Model.Match.MatchId" />
            <input type="hidden" id="isOpponent1" value="@Model.IsOpponent1.ToString()" />
            @if (Model.IsOpponent1)
            {

                <input type="text" class="proposedBet input-box-black" />
                <button type="button" class="btnProposeBet input-button-black">Propose bet</button>
            }
            else
            {
                <input type="text" class="proposedBet input-box-black" disabled />
                <button type="button" class="btnAacceptBet  input-button-black btnHandleBet">Accept</button>
                <button type="button" class="btnDeclineBet  input-button-black btnHandleBet">Decline</button>
            }
        </div>
        <div class="playfield">
            <button type="button" class="btnRoll play-button game-button " disabled>Roll the Dice</button>
            <button type="button" class="resetGame" style="display:none;" disabled>Start over</button>
            <p class="bet">@Model.Opponent1.UserName rolled a:  <span id="Opponent1Face"></span></p>
            <p class="bet">@Model.Opponent2.UserName rolled a:  <span id="Opponent2Face"></span></p>
            <p class="jumbo-title">WINNER:  <span id="Winner"></span></p>
            <p class="CountDown">Game shuts down in:  <span class="counter " id="counter">20</span></p>


            @if (ViewBag.Face != null)
            {
                <p>You got:  <span><text id="Winner"></text></span></p>
            }
            <div class="waving-tom"></div>
        </div>

        <div class="opponent op2">
            <h2 class="bet">Opponent 2</h2>
            <div class="avatar-container">
                @if (Model.Opponent2.Avatar != null)
                {
                    <img src="~/Content/uploads/@Model.Opponent2.Avatar" class="avatar-big" />
                } else
                {
                    <div class="no-image"></div>
                }
                <p class="username jumbo-title">@Model.Opponent2.UserName</p>
            </div>
            <p class="bet">In-Wallet: <span class="bitcoin-currency">@Model.Opponent2.Balance</span></p>
        </div>
    </div>



</div>
<script>
    $(document).ready(function () {
        var initState = function () {
            $.ajax({
                url: "/Match/checkMatchStatus?matchId=" + $("#matchId").val(), success: function (result) {
                    switch (result.Data.BetState) {
                        case 0:
                            if ($('#isOpponent1').val() === 'False') {
                                betListener();
                            }
                            break;
                        case 1:
                            $(".proposedBet").val(result.Data.PrizePool);
                            $(".btnHandleBet").css("display", "inline-block");
                            if ($('#isOpponent1').val() === 'True') {
                                responseListener();
                            }
                            break;
                        case 2:
                            break;
                        case 3:
                            $(".proposedBet").val(result.Data.PrizePool);
                            $(".btnProposeBet").css("display", "none");
                            $(".proposedBet").prop('disabled', true);
                            $(".btnRoll").prop('disabled', false);
                            break;
                        case 3:
                            $(".proposedBet").val(result.Data.PrizePool);
                            $(".btnProposeBet").css("display", "none");
                            $(".proposedBet").prop('disabled', true);
                            $(".btnRoll").prop('disabled', true);
                            $(".resetGame").prop('disabled', false);
                            break;
                        case 4:
                            $(".proposedBet").val(result.Data.PrizePool);
                            $(".btnProposeBet").css("display", "none");
                            $(".proposedBet").prop('disabled', true);
                            $(".btnRoll").prop('disabled', true);
                            $(".resetGame").prop('disabled', true);
                            setInterval(countDown(), 1000);
                            break;
                    }
                }
            });
        }
        initState();
    });


    $(".btnProposeBet").click(function () {
        responseListener();
    });

    $(".btnAacceptBet").click(function () {
        respondToBet(true);
    });

    $(".btnDeclineBet").click(function () {
        respondToBet(false);
    });

    $(".btnRoll").click(function () {
        $(".btnRoll").prop('disabled', true);
        $.ajax({
            url: "/Match/Roll?matchId=" + $("#matchId").val(), success: function (result) {
                console.log(result);
                $("#Opponent1Face").text(result.Opponent1Roll);
                $("#Opponent2Face").text(result.Opponent2Roll);
                if (result.Opponent1Roll === result.Opponent2Roll) {
                    resetRoll();
                    $("#Winner").text("Draw");
                } else {
                    $("#Winner").text(result.Winner);
                    setInterval(countDown, 1000);
                }
            }
        });
    });

    var countDown = function () {
        $(".CountDown").css("display", "block");
        $('.counter').each(function () {
            var count = parseInt($(this).html());
            if (count !== 0) {
                $(this).text(count - 1);
            } else {
                // Schedule the update to happen once every second
                $.ajax({
                    url: "/Match/TransferMatch?matchId=" + $("#matchId").val(), success: function () {
                        window.location = "http://localhost:49816/Home/Index";
                    }
                });
            }
        });
    };
    var respondToBet = function (response) {
        $(".btnHandleBet").css("display", "inline-block");
        $.ajax({
            url: "/Match/RespondBet?accepted=" + response + "&matchId=" + $("#matchId").val(), success: function (result) {
                if (!response) {
                    betListener();
                    $(".proposedBet").val("");
                } else {
                    $(".btnRoll").prop('disabled', false);
                }
            }
        });
    }

    var betListener = function () {
        $.ajax({
            url: "/Match/RecieveBet?matchId=" + $("#matchId").val(), success: function (result) {
                $(".proposedBet").val(result.Amount);
                $(".btnHandleBet").css("display", "inline-block");
            }
        });
    }

    var responseListener = function () {
        $(".btnProposeBet").css("display", "none");
        $(".proposedBet").prop('disabled', true);

        $.ajax({
            url: "/Match/ProposeBet?matchId=" + $("#matchId").val() + "&amount=" + $(".proposedBet").val(), success: function (result) {
                if (result.Status === "ACC") {
                    $(".btnRoll").prop('disabled', false);
                } else if (result.Status === "DEC") {
                    $(".btnProposeBet").css("display", "block");
                    $(".proposedBet").prop('disabled', false);
                }
            }
        });
    }
    var resetRoll = function () {
        $.ajax({
            url: "/Match/ResetRoll?matchId=" + $("#matchId").val(), success: function () {
                $(".btnRoll").prop('disabled', false);
            }
        });
    }


</script>