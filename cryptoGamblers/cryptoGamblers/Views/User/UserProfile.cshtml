@using Microsoft.AspNet.Identity
@using Microsoft.AspNet.Identity.EntityFramework
@using cryptoGamblers.Models
@model cryptoGamblers.Models.UserProfileViewModel

@{
	ViewBag.Title = Model.Username;
}


<div class="container">
	<div class="userprofile-wrapper">
		<div class="userprofile-item">
			<img src="~/Content/uploads/@Model.AvatarPath" class="img-rounded" style="max-width: 250px" />
		</div>
		<div class="userprofile-item">
			<h1>
				@Model.Username
			</h1>
			<p>@Model.ProfileDescription</p>
			<hr class="userprofile-hr" />
			@{if (Model.WinStreak > 0)
				{
					<p><strong>🚨 @Model.Username is currently on a winstreak! 🚨 </strong></p>
				}
			}
			<div class="userprofile--winstreak-wrapper">
				<div class="userprofile--winstreak-item">
					<div class="circle" id="circles-1"></div>
				</div>
				<div class="userprofile--winstreak-item">
					<p id="winstreak" data-winstreak="@Model.WinStreak">
						<strong>Current winstreak:</strong> @Model.WinStreak
					</p>
					<p id="maxWinstreak" data-maxwinstreak="@Model.WinStreakMax">
						<strong>All-Time Winstreak:</strong> @Model.WinStreakMax
					</p>
				</div>

			</div>

		</div>
	</div>
</div>



@Scripts.Render("~/bundles/circles")

<script>
	var winstreak = document.getElementById("winstreak").dataset.winstreak;
	var maxWinstreak = document.getElementById("maxWinstreak").dataset.maxwinstreak;

	if (maxWinstreak > 0) {
		var myCircle = Circles.create({
			id: 'circles-1',
			radius: 40,
			value: winstreak,
			maxValue: maxWinstreak,
			width: 12,
			text: function (value) {
				return value + '/' + this.getMaxValue()
			},
			colors: ['rgb(0, 202, 254)', 'rgb(31, 172, 208)'],
			duration: 600,
			wrpClass: 'circles-wrp',
			textClass: 'circles-text',
			valueStrokeClass: 'circles-valueStroke',
			maxValueStrokeClass: 'circles-maxValueStroke',
			styleWrapper: true,
			styleText: false
		});
	}
</script>
