@model cryptoGamblers.Models.ApplicationUser
@{
    ViewBag.Title = "Edit User";
}
@Html.ValidationSummary(false)

<div class="container body-content">
    <h2>Edit User "@Model.UserName"</h2>

    
    <h1>Coming: TBD</h1>
    @using (Html.BeginForm())
    {
        @Html.HiddenFor(m => m.Id)
        <div class="form-group">
            <label>Email</label>
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control", disabled = "disabled", value = Model.Email })
        </div>

        <div class="form-group">
            <label>Password</label>
            <input name="password" type="password" class="form-control" disabled  />
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Balance)
            @*@Html.EditorFor(m => m.Balance, new { @class = "form-control", disabled = "disabled", value = Model.Balance })*@
            @Html.TextBoxFor(m => m.Balance, new { @type = "number", @class = "form-control", disabled = "disabled", value = Model.Balance })
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.ProfileDescription)
            @if (Model.ProfileDescription == null)
            {
                Model.ProfileDescription = "A noob without a profile description";
            }
            @Html.TextAreaFor(m => m.ProfileDescription, 5, 5, new { @class = "form-control", disabled = "disabled", value = Model.ProfileDescription.ToString() })
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Avatar)
            @Html.TextBoxFor(m => m.Avatar, new { @class = "form-control", type = "file", name = "fileupload", disabled = "disabled" })
        </div>

        <button type="submit" class="btn btn-primary" disabled>Save</button>
        @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-default" })
    }
</div>
<style>
    input:disabled, button:disabled, textarea:disabled {
        opacity: .5 !important;
    }
</style>